#!/bin/bash
# Copyright (c) 2014, Redmaner

VERSION=1.0
up=$PWD

echo -e "
#################################################
 MA-XML-MERGE V$VERSION
#################################################
"

# Source information
source $up/configure
source $up/.configuration

if [ ! -f $up/bools ]; then
	echo -e "ERROR: bools file not detected\nCopy bools.default to bools and edit it to your needs\nThen run merge again"; exit
else
	source $up/bools
fi

for apk in $(find $orig_dir -iname "*.apk" | sort); do
	apk_name=$(basename $apk)
	if [ -d $targ_dir/$apk_name ]; then
		if [ -f "$orig_dir/$apk_name/res/values/strings.xml" ] && [ -f "$targ_dir/$apk_name/res/values-$lang_iso/strings.xml" ]; then
			echo -e "\nMerging $apk_name"
			$up/merge_xml $orig_dir/$apk_name/res/values/strings.xml $targ_dir/$apk_name/res/values-$lang_iso/strings.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml
		fi
	fi
done


# MergeCustom: Function to merge non matching apk's.
# For example AOSP applications: SystemUI.apk is equal to MiuiSystemUI.apk
MergeCustom () {
custom_apk=$1
apk_name=$2
if [ -f "$orig_dir/$apk_name/res/values/strings.xml" ] && [ -f "$targ_dir/$custom_apk/res/values-$lang_iso/strings.xml" ]; then
	echo -e "\nMerging $apk_name"
	$up/merge_xml $orig_dir/$apk_name/res/values/strings.xml $targ_dir/$custom_apk/res/values-$lang_iso/strings.xml $new_dir/$apk_name/res/values-$lang_iso/strings.xml
fi
}

if [ "$aosp" == "yes" ]; then
	MergeCustom "CalendarGoogle.apk" "Calendar.apk"
	MergeCustom "DeskClockGoogle.apk" "DeskClock.apk"
	MergeCustom "EmailGoogle.apk" "Email.apk"
	MergeCustom "Exchange2Google.apk" "Exchange2.apk"
	MergeCustom "GalleryGoogle.apk" "MiuiGallery.apk"
	MergeCustom "Music2.apk" "Music.apk"
	MergeCustom "SystemUI.apk" "MiuiSystemUI.apk"
fi	
