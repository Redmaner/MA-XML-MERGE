#!/bin/bash
# Copyright (c) 2014, Redmaner

up=$PWD

# Define bash colors for Mac OSX / Linux
case `uname -s` in
    Darwin) 
           txtrst='\033[0m' # Color off
           txtred='\033[0;31m' # Red
           txtgrn='\033[0;32m' # Green
           txtblu='\033[0;34m' # Blue
           ;;
    *)
           txtrst='\e[0m' # Color off
           txtred='\e[0;31m' # Red
           txtgrn='\e[0;32m' # Green
           txtblu='\e[0;36m' # Blue
           ;;
esac

InputPathOrig () {
echo -e "\nPlease enter the path to the exsisting repository, up to the main folder (root of the applications)
For example: /home/redmaner/MIUI6-XML-NL/Dutch/main"
read input
if [ -d $input ]; then
	orig_dir=$input
else
	echo -e "${txtred}Path doesn't exsist${txtrst}"; InputPathOrig
fi
}

CheckAosp () {
echo -e "\nIs this exsisting repository AOSP? (yes,no): "; read input
case $input in
	"yes"|"no") 
	aosp=$input;;
	*) echo "${txtred}Wrong input${txtrst}"; CheckAosp;;
esac
}

InputPathTarg () {
echo -e "\nPlease enter the path to the repository with exsisting translations
Up to the main folder (root of the applications)
For example: /home/redmaner/MA-XML-5.0-DUTCH/Dutch/main"
read input
if [ -d $input ]; then
	targ_dir=$input
	CheckAosp
else
	echo "${txtred}Path doesn't exsist${txtrst}"; InputPathTarg
fi
}

InputPathNew () {
echo -e "\nPlease enter the path to the exsisting repository, up to the main folder (root of the applications)
For example: /home/redmaner/MIUI6-XML-NL/Dutch/main"

read input
if [ -d $input ]; then
	new_dir=$input
else
	echo "${txtred}Path doesn't exsist${txtrst}"; InputPathNew
fi
}

MakeConfig () {
echo -e "\nThis tool merges exsisting XML translations into new XML's and is designed for Xiaomi.eu translation repositories.
This tool requires some information to work properly and only works for the main folder."

echo -en "\nPlease enter the name of your language (for example: Dutch): "; read input
lang_name=$input

echo -en "\nplease enter the iso code of your language (for example: nl): "; read input
lang_iso=$input

echo -e "\nWhich repository (MIUI Version) do you want to use as base for your new translation?
 1 - MIUIv5 aries (Xiaomi Mi2)
 2 - MIUIv5 cancro (Xiaomi Mi3/Mi4)

 3 - MIUI6 Tablet mocha (Xiaomi MiPad)
 4 - MIUI6 Cancro (Xiaomi Mi3/Mi4)

 5 - An exsisting repository on my harddrive"
echo -en "\nPlease enter your choice: "; read input

case "$input" in 
	1) orig_dir=$up/MIUIv5/aries
	   dir_mode=auto
	   untranslateable=$up/resources/MIUIv5_ignorelist.mxcr;;
	2) orig_dir=$up/MIUIv5/cancro
	   dir_mode=auto
	   untranslateable=$up/resources/MIUIv5_ignorelist.mxcr;;
	3) orig_dir=$up/MIUI6/mocha
	   dir_mode=auto
	   untranslateable=$up/resources/MIUI6_ignorelist.mxcr;;
	4) orig_dir=$up/MIUI6/cancro
	   dir_mode=auto
	   untranslateable=$up/resources/MIUI6_ignorelist.mxcr;;
	5) InputPathOrig
	   dir_mode=custom
	   untranslateable=disabled;;
esac

InputPathTarg

echo -e "Where do the new strings.xml need to go?
 1 - New folder/repository
 2 - Exsisting repository

WARNING: If you select an exsising repository files could be overwritten by merge"
echo -en "\nPlease enter your choice: "; read input

case "$input" in
	1) new_dir=$up/MergedXML/$lang_name/main;;
	2) InputPathNew;;
esac

echo -e "\nConfiguration complete, thank you"
cat > .configuration << EOF
#!/bin/bash

lang_name=$lang_name
lang_iso=$lang_iso
orig_dir=$orig_dir
aosp=$aosp
dir_mode=$dir_mode
targ_dir=$targ_dir
new_dir=$new_dir
untranslateable_list=$untranslateable
EOF
}

SyncRepo () {
case "$1" in
	new)
	rm -rf $3
	git clone $2 $3;;

	update) 
	cd $2; git pull origin $3; cd $up;;
esac
}

echo -e "${txtblu}\nSyncing v5-XML-compare (MIUIv5)${txtrst}"
if [ -d $up/MIUIv5 ]; then
	SyncRepo "update" "MIUIv5" "master"
else
	SyncRepo "new" "https://github.com/Acid-miuipolskapl/v5-XML-Compare" "MIUIv5"
fi

echo -e "${txtblu}\nSyncing v6-XML-compare (MIUI6)${txtrst}"
if [ -d $up/MIUI6 ]; then 
	SyncRepo "update" "MIUI6" "master"
else
	SyncRepo "new" "https://github.com/Acid-miuipolskapl/v6-XML-Compare" "MIUI6"
fi

echo -e "${txtblu}\nSyncing resources${txtrst}"
if [ -d $up/resources ]; then 
	SyncRepo "update" "resources" "master"
else
	SyncRepo "new" "https://github.com/Redmaner/MA-XML-CHECK-RESOURCES" "resources"
fi

echo -e "${txtblu}\nPreparing resources${txtrst}"
$up/res_tools --parse_ignorelist $up/resources/MIUI6_ignorelist.xml $up/resources/MIUI6_ignorelist.mxcr
$up/res_tools --parse_ignorelist $up/resources/MIUIv5_ignorelist.xml $up/resources/MIUIv5_ignorelist.mxcr

if [ -e $up/resources/custom_merge.xml ]; then
	$up/res_tools --add_custom $up/resources/MIUI6_ignorelist.mxcr $up/resources/custom_merge.xml
	$up/res_tools --add_custom $up/resources/MIUIv5_ignorelist.mxcr $up/resources/custom_merge.xml
fi

if [ ! -f "$up/.configuration" ]; then
	MakeConfig
fi
